{"version":3,"sources":["lib/network.ts","components/CountryInfoRow/index.tsx","components/CountryCard/index.tsx","components/Layout/index.tsx","components/RegionDropdown/index.tsx","components/MainContent/index.tsx","lib/theme.ts","routes/Country/index.tsx","components/Appbar/index.tsx","routes/Home/index.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","networkService","loadAllCountries","get","response","countries","data","map","flags","name","rest","flagUrl","svg","common","typedError","request","console","error","status","loadByRegion","region","CountryInfoRow","label","value","style","display","Typography","variant","sx","fontWeight","flexGrow","noWrap","CountryCard","population","capital","Card","backgroundImage","boxShadow","CardMedia","component","src","height","alt","CardContent","p","pb","mb","toLocaleString","Layout","children","theme","useTheme","css","palette","background","default","Container","maxWidth","pt","px","lg","flexDirection","maxHeight","RegionDropdown","setValue","e","a","target","Select","fullWidth","disableUnderline","IconComponent","BiChevronDown","displayEmpty","renderValue","onChange","right","spacing","width","top","color","borderRadius","SelectDisplayProps","padding","fontSize","primary","main","shape","shadows","text","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","bgcolor","option","MenuItem","dense","MainContent","React","useState","loading","setLoading","setCountries","setRegion","document","title","toLowerCase","countriesData","useEffect","loadCountries","Grid","container","justifyContent","rowSpacing","item","xs","sm","md","CircularProgress","breakpoints","up","columnSpacing","country","xl","ThemeContext","createContext","toggleMode","Country","Appbar","themeSwitcher","useContext","mode","Fragment","AppBar","position","Toolbar","py","disableGutters","alignItems","onClick","cursor","verticalAlign","ml","Home","App","setMode","useMemo","curr","createTheme","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","paper","secondary","getTheme","Provider","ThemeProvider","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a63b8cbc.chunk.js","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { CountryData } from \"../types/lib/network\";\n\nconst instance = axios.create({\n  baseURL: \"https://restcountries.com/v3.1\",\n});\n\nconst networkService = {\n  async loadAllCountries() {\n    try {\n      const response = await instance.get<CountryData[]>(\n        \"/all?fields=name,population,region,capital,flags\"\n      );\n      const countries = response.data;\n      return countries.map(({ flags, name, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n        name: name.common,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n\n  async loadByRegion(region: string) {\n    try {\n      const response = await instance.get<CountryData[]>(\n        `region/${region}?fields=name,population,region,capital,flags`\n      );\n      const countries = response.data;\n      return countries.map(({ flags, name, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n        name: name.common,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n};\n\nexport default networkService;\n","import { Typography } from \"@mui/material\";\n\ntype Props = {\n  /** Label for the field */\n  label: string;\n  /** Value of the field */\n  value: string;\n};\n\nconst CountryInfoRow: React.FC<Props> = ({ label, value }) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightMedium\",\n        }}\n      >\n        {label}:&nbsp;\n      </Typography>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          flexGrow: 1,\n        }}\n        noWrap\n      >\n        {value}\n      </Typography>\n    </div>\n  );\n};\nexport default CountryInfoRow;\n","import { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport CountryInfoRow from \"../CountryInfoRow\";\n\nexport interface Props {\n  /** Url for image of country's flag */\n  flagUrl: string;\n  /** name of the country */\n  name: string;\n  /** Country's population */\n  population: number;\n  /** Region of the country */\n  region: string;\n  /** capital of the country */\n  capital: string;\n}\n\nconst CountryCard: React.FC<Props> = ({\n  flagUrl,\n  population,\n  name,\n  region,\n  capital,\n}) => {\n  return (\n    <Card sx={{ backgroundImage: \"none\", boxShadow: 3 }}>\n      <CardMedia\n        component=\"img\"\n        src={flagUrl}\n        height={180}\n        alt=\"flag of country\"\n      />\n      <CardContent sx={{ p: 4, \"&:last-child\": { pb: 5 } }}>\n        <Typography\n          sx={{\n            fontWeight: \"fontWeightBold\",\n            mb: 2,\n          }}\n          noWrap\n        >\n          {name}\n        </Typography>\n        <div>\n          <CountryInfoRow\n            label=\"Population\"\n            value={population.toLocaleString()}\n          />\n          <CountryInfoRow label=\"Region\" value={region} />\n          <CountryInfoRow label=\"Capital\" value={capital} />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CountryCard;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Container, useTheme } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const theme = useTheme();\n  return (\n    <main\n      css={css`\n        background: ${theme.palette.background.default};\n        margin: -8px;\n      `}\n    >\n      <Container\n        maxWidth=\"lg\"\n        sx={{\n          pt: 4,\n          px: {\n            lg: 0,\n          },\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxHeight: \"100%\",\n        }}\n      >\n        {children}\n      </Container>\n    </main>\n  );\n};\n\nexport default Layout;\n","import { MenuItem, Select, SelectChangeEvent, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { BiChevronDown } from \"react-icons/bi\";\n\ntype Props = {\n  value: string;\n  setValue: (newVaue: string) => void;\n};\n\nconst RegionDropdown: React.FC<Props> = ({ value, setValue }) => {\n  const theme = useTheme();\n  const options = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  function renderValue(value: any) {\n    if (!value) return \"Filter by Region\";\n    else return value;\n  }\n\n  async function handleChange(e: SelectChangeEvent<string>) {\n    const value = e.target.value;\n    setValue(value);\n  }\n\n  return (\n    <Select\n      fullWidth\n      variant=\"filled\"\n      disableUnderline\n      IconComponent={BiChevronDown}\n      displayEmpty\n      renderValue={renderValue}\n      value={value}\n      onChange={handleChange}\n      sx={{\n        \"& svg\": {\n          right: theme.spacing(3),\n          width: \"1.2em\",\n          height: \"1.2em\",\n          top: \"calc(50% - 0.6em)\",\n          color: \"text.primary\",\n        },\n        borderRadius: 1,\n      }}\n      SelectDisplayProps={{\n        style: {\n          padding: `${theme.spacing(2)} ${theme.spacing(3)}`,\n          fontSize: \"0.875rem\",\n          background: theme.palette.primary.main,\n          borderRadius: theme.shape.borderRadius,\n          boxShadow: theme.shadows[2],\n          color: theme.palette.text.primary,\n        },\n      }}\n      MenuProps={{\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        },\n        transformOrigin: {\n          vertical: -8,\n          horizontal: \"left\",\n        },\n        variant: \"menu\",\n        MenuListProps: {\n          variant: \"menu\",\n          sx: {\n            bgcolor: \"primary.main\",\n            color: \"text.primary\",\n          },\n        },\n      }}\n    >\n      {options.map((option) => (\n        <MenuItem key={option} value={option} dense>\n          {option}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nexport default RegionDropdown;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { CircularProgress, Grid, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport networkService from \"../../lib/network\";\nimport CountryCard from \"../CountryCard\";\nimport Layout from \"../Layout\";\nimport { Props as CountryInfo } from \"../CountryCard\";\nimport RegionDropdown from \"../RegionDropdown\";\n// import Searchbar from \"../Searchbar\";\n\nconst MainContent: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [countries, setCountries] = React.useState<CountryInfo[]>([]);\n  const [region, setRegion] = React.useState<string>(\"\");\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    async function loadCountries() {\n      const countriesData = await networkService.loadAllCountries();\n      setCountries(countriesData);\n      setLoading(false);\n    }\n    loadCountries();\n  }, []);\n\n  async function loadByRegion(value: string) {\n    setRegion(value);\n    setLoading(true);\n    document.title = `Countries | ${value}`;\n    const countriesData = await networkService.loadByRegion(\n      value.toLowerCase()\n    );\n    setCountries(countriesData);\n    setLoading(false);\n  }\n\n  return (\n    <Layout>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        rowSpacing={4}\n        sx={{ mb: 4 }}\n      >\n        <Grid item xs={12} sm={6} md={5}>\n          {/* <Searchbar /> */}\n        </Grid>\n        <Grid item xs={7} sm={3} md={2}>\n          <RegionDropdown value={region} setValue={loadByRegion} />\n        </Grid>\n      </Grid>\n      {loading ? (\n        <CircularProgress color=\"primary\" />\n      ) : (\n        <div\n          css={css`\n            flex-grow: 1;\n            overflow-y: scroll;\n            padding-left: 16px;\n            padding-right: 16px;\n            ${theme.breakpoints.up(\"sm\")} {\n              padding-left: 0;\n              padding-right: 0;\n            } ;\n          `}\n        >\n          <Grid\n            container\n            rowSpacing={{ xs: 6, lg: 10 }}\n            columnSpacing={{\n              xs: 3,\n              md: 4,\n              lg: 6,\n            }}\n          >\n            {countries.map((country) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={country.name}>\n                <CountryCard\n                  name={country.name}\n                  flagUrl={country.flagUrl}\n                  population={country.population}\n                  region={country.region}\n                  capital={country.capital}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import type { PaletteMode } from \"@mui/material\";\nimport React from \"react\";\nimport type { IThemeContext } from \"../types/lib/theme\";\n\nexport default function getTheme(mode: PaletteMode) {\n  return {\n    typography: {\n      fontFamily: \"Nunito Sans, sans-serif\",\n      fontWeightRegular: 300,\n      fontWeightMedium: 600,\n      fontWeightBold: 800,\n    },\n    palette: {\n      mode,\n      ...(mode === \"light\"\n        ? {\n            background: {\n              default: \"hsl(0, 0%, 98%)\",\n              paper: \"hsl(0, 0%, 100%)\",\n            },\n            text: {\n              primary: \"hsl(200, 15%, 8%)\",\n              secondary: \"hsl(0, 0%, 52%)\",\n            },\n            primary: {\n              main: \"hsl(0, 0%, 100%)\",\n            },\n          }\n        : {\n            background: {\n              default: \"hsl(207, 26%, 17%)\",\n              paper: \"hsl(209, 23%, 22%)\",\n            },\n            text: {\n              primary: \"hsl(0, 0%, 100%)\",\n              secondary: \"hsl(0, 0%, 100%)\",\n            },\n            primary: {\n              main: \"hsl(209, 23%, 22%)\",\n            },\n          }),\n    },\n  };\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  toggleMode: () => {},\n});\n","const Country: React.FC = () => {\n  return <div>Country</div>;\n};\n\nexport default Country;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme,\n  Container,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { ThemeContext } from \"../../lib/theme\";\nimport { BsMoon, BsMoonFill } from \"react-icons/bs\";\n\nconst Appbar: React.FC = () => {\n  const themeSwitcher = React.useContext(ThemeContext);\n  const theme = useTheme();\n  const mode = theme.palette.mode;\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          backgroundImage: \"none\",\n        }}\n      >\n        <Toolbar\n          sx={{\n            py: 2,\n            px: {\n              xs: 2,\n              sm: 4,\n            },\n          }}\n        >\n          <Container\n            disableGutters\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              component=\"h2\"\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightBold\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n              }}\n            >\n              Where in the world?\n            </Typography>\n            <Typography\n              onClick={themeSwitcher.toggleMode}\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightMedium\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n                cursor: \"pointer\",\n                \"& > svg, & > span\": {\n                  display: \"inline-block\",\n                  verticalAlign: \"middle\",\n                  color: \"text.primary\",\n                },\n                \"& > span\": {\n                  ml: 1,\n                },\n              }}\n            >\n              {mode === \"light\" ? <BsMoon /> : <BsMoonFill />}\n              <span> Dark Mode </span>\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Toolbar sx={{ py: 2 }} />\n    </React.Fragment>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\nimport { Outlet } from \"react-router\";\nimport Appbar from \"../../components/Appbar\";\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Appbar />\n      <Outlet />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { createTheme, PaletteMode, Theme, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainContent from \"./components/MainContent\";\nimport getTheme, { ThemeContext } from \"./lib/theme\";\nimport Country from \"./routes/Country\";\nimport Home from \"./routes/Home\";\nimport { IThemeContext } from \"./types/lib/theme\";\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const themeSwitcher = React.useMemo<IThemeContext>(\n    () => ({\n      toggleMode: () =>\n        setMode((curr) => (curr === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n  const theme = React.useMemo<Theme>(() => createTheme(getTheme(mode)), [mode]);\n  return (\n    <ThemeContext.Provider value={themeSwitcher}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />}>\n              <Route index element={<MainContent />} />\n              <Route path=\":country\" element={<Country />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}