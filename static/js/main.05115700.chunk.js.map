{"version":3,"sources":["lib/network.ts","components/CountryInfoRow/index.tsx","components/CountryCard/index.tsx","components/Layout/index.tsx","components/RegionDropdown/index.tsx","lib/hooks.ts","components/Searchbar/index.tsx","components/LoadingIndicator/index.tsx","components/MainContent/index.tsx","lib/theme.ts","components/LinkButton/index.tsx","routes/Country/index.tsx","components/Appbar/index.tsx","routes/Home/index.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","loadCountrySummary","path","a","get","response","countries","data","status","map","flags","name","cca3","capital","rest","flagUrl","svg","common","code","length","loadCountryNames","networkService","loadAllCountries","loadByRegion","region","loadByName","loadBorderCountries","codes","join","loadByCode","country","currencies","languages","tld","nativeNames","Object","entries","nativeName","cap","values","currency","CountryInfoRow","label","value","gutter","style","display","Typography","variant","sx","fontWeight","flexShrink","noWrap","color","gutterBottom","flexGrow","CountryCard","population","to","css","Card","backgroundImage","boxShadow","CardMedia","component","src","height","alt","CardContent","p","pb","mb","toLocaleString","Layout","children","Container","maxWidth","pt","px","lg","RegionDropdown","setValue","theme","useTheme","e","target","Select","fullWidth","disableUnderline","IconComponent","BiChevronDown","displayEmpty","renderValue","onChange","right","spacing","width","top","borderRadius","SelectDisplayProps","padding","fontSize","background","palette","primary","main","shape","shadows","text","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","bgcolor","option","MenuItem","dense","useQuery","callback","args","effectDependencies","React","useState","loading","setLoading","error","setError","undefined","setData","useEffect","execCallback","useLazyQuery","dependencies","push","exec","useCallback","newArgs","Searchbar","inputValue","setInputValue","suggestions","fetchOptions","options","debouncedFetchOptions","debounce","Autocomplete","onInputChange","_","toLowerCase","freeSolo","PaperComponent","props","Paper","mt","ListboxProps","getOptionLabel","renderOption","paddingLeft","textDecoration","filterOptions","x","disableClearable","noOptionsText","renderInput","InputProps","TextField","placeholder","startAdornment","secondary","size","marginRight","py","paddingTop","LoadingIndicator","CircularProgress","xs","sm","ml","transform","MainContent","setRegion","searchByRegion","filteredCountries","regionError","regionLoading","Grid","container","justifyContent","rowSpacing","item","md","document","title","breakpoints","up","columnSpacing","xl","ThemeContext","createContext","toggleMode","LinkButton","startIcon","Button","textTransform","Country","useParams","details","borderLoading","borderError","borders","Fragment","subregion","Skeleton","animation","Box","Appbar","themeSwitcher","useContext","mode","AppBar","position","Toolbar","disableGutters","alignItems","onClick","cursor","verticalAlign","Home","default","minHeight","App","setMode","useMemo","curr","createTheme","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","paper","getTheme","Provider","ThemeProvider","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05115700.chunk.js","sourcesContent":["import axios from \"axios\";\nimport type {\n  CountryData,\n  CountryDetail,\n  CountryName,\n} from \"../types/lib/network\";\nimport type { useQueryResponse } from \"./hooks\";\nimport { Props as CountryCardProps } from \"../components/CountryCard\";\nimport type { Props as CountryDetailProps } from \"../routes/Country\";\n\nconst instance = axios.create({\n  baseURL: \"https://restcountries.com/v3.1\",\n});\n\nasync function loadCountrySummary(\n  path: string\n): Promise<useQueryResponse<CountryCardProps[]>> {\n  try {\n    const response = await instance.get<CountryData[]>(\n      `${path}?fields=name,population,region,capital,flags,cca3`\n    );\n    const countries = response.data;\n    return {\n      status: \"success\",\n      data: countries.map(({ flags, name, cca3, capital, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n        name: name.common,\n        code: cca3,\n        capital: capital.length > 0 ? capital[0] : \"Not Available\",\n      })),\n    };\n  } catch (error) {\n    return {\n      status: \"error\",\n    };\n  }\n}\n\nasync function loadCountryNames(\n  path: string\n): Promise<useQueryResponse<CountryName[]>> {\n  try {\n    const response = await instance.get<Pick<CountryData, \"name\" | \"cca3\">[]>(\n      `${path}fields=name,cca3`\n    );\n    const countries = response.data;\n    return {\n      status: \"success\",\n      data: countries.map(({ name, cca3 }) => ({\n        name: name.common,\n        code: cca3,\n      })),\n    };\n  } catch (error) {\n    return {\n      status: \"error\",\n    };\n  }\n}\n\nconst networkService = {\n  loadAllCountries(): Promise<useQueryResponse<CountryCardProps[]>> {\n    return loadCountrySummary(\"/all\");\n  },\n\n  loadByRegion({\n    region,\n  }: {\n    region: string;\n  }): Promise<useQueryResponse<CountryCardProps[]>> {\n    return loadCountrySummary(`/region/${region}`);\n  },\n\n  loadByName({\n    name,\n  }: {\n    name: string;\n  }): Promise<useQueryResponse<CountryName[]>> {\n    return loadCountryNames(`/name/${name}?`);\n  },\n\n  loadBorderCountries({\n    codes,\n  }: {\n    codes: string[];\n  }): Promise<useQueryResponse<CountryName[]>> {\n    return loadCountryNames(`/alpha?codes=${codes.join(\",\")}&`);\n  },\n\n  async loadByCode({\n    code,\n  }: {\n    code: string;\n  }): Promise<useQueryResponse<CountryDetailProps>> {\n    try {\n      const response = await instance.get<CountryDetail>(\n        `alpha/${code}?fields=name,population,region,capital,subregion,languages,flags,currencies,tld,borders`\n      );\n      const country = response.data;\n      const { flags, name, currencies, languages, tld, capital, ...rest } =\n        country;\n\n      const nativeNames = Object.entries(name.nativeName);\n      const nativeName =\n        nativeNames.length > 0 ? nativeNames[0][1].common : \"Not Available\";\n      const cap = capital.length > 0 ? capital[0] : \"Not Available\";\n      return {\n        status: \"success\",\n        data: {\n          ...rest,\n          flagUrl: flags.svg,\n          name: name.common,\n          nativeName,\n          tld: tld.join(\", \"),\n          currencies: Object.values(currencies)\n            .map((currency) => currency.name)\n            .join(\",\"),\n          languages: Object.values(languages).join(\",\"),\n          capital: cap,\n        },\n      };\n    } catch (error) {\n      return { status: \"error\" };\n    }\n  },\n};\n\nexport default networkService;\n","import { Typography } from \"@mui/material\";\n\ntype Props = {\n  /** Label for the field */\n  label: string;\n  /** Value of the field */\n  value: string;\n  /** Whether there should be gutter at bottom */\n  gutter?: boolean;\n};\n\nconst CountryInfoRow: React.FC<Props> = ({ label, value, gutter }) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightMedium\",\n          flexShrink: 0,\n        }}\n        noWrap\n        color=\"textPrimary\"\n        gutterBottom={gutter}\n      >\n        {label}:&nbsp;\n      </Typography>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          flexGrow: 1,\n        }}\n        noWrap\n        color=\"textPrimary\"\n        gutterBottom={gutter}\n      >\n        {value}\n      </Typography>\n    </div>\n  );\n};\nexport default CountryInfoRow;\n","/** @jsxImportSource @emotion/react */\nimport { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport CountryInfoRow from \"../CountryInfoRow\";\nimport { Link } from \"react-router-dom\";\nimport { css } from \"@emotion/react\";\n\nexport interface Props {\n  /** Url for image of country's flag */\n  flagUrl: string;\n  /** name of the country */\n  name: string;\n  /** Country's population */\n  population: number;\n  /** Region of the country */\n  region: string;\n  /** capital of the country */\n  capital: string;\n  /** code of the country */\n  code: string;\n}\n\nconst CountryCard: React.FC<Props> = ({\n  flagUrl,\n  population,\n  name,\n  region,\n  capital,\n  code,\n}) => {\n  return (\n    <Link\n      to={`/${code}`}\n      css={css`\n        display: block;\n        text-decoration: none;\n      `}\n    >\n      <Card sx={{ backgroundImage: \"none\", boxShadow: 3 }}>\n        <CardMedia\n          component=\"img\"\n          src={flagUrl}\n          height={180}\n          alt=\"flag of country\"\n        />\n        <CardContent sx={{ p: 4, \"&:last-child\": { pb: 5 } }}>\n          <Typography\n            sx={{\n              fontWeight: \"fontWeightBold\",\n              mb: 2,\n            }}\n            noWrap\n          >\n            {name}\n          </Typography>\n          <div>\n            <CountryInfoRow\n              label=\"Population\"\n              value={population.toLocaleString()}\n            />\n            <CountryInfoRow label=\"Region\" value={region} />\n            <CountryInfoRow label=\"Capital\" value={capital} />\n          </div>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n\nexport default CountryCard;\n","import { Container } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <Container\n      maxWidth=\"lg\"\n      component=\"main\"\n      sx={{\n        pt: 4,\n        px: {\n          lg: 0,\n        },\n      }}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default Layout;\n","import { MenuItem, Select, SelectChangeEvent, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { BiChevronDown } from \"react-icons/bi\";\n\ntype Props = {\n  value: string;\n  setValue: (newVaue: string) => void;\n};\n\nconst RegionDropdown: React.FC<Props> = ({ value, setValue }) => {\n  const theme = useTheme();\n  const options = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  function renderValue(value: any) {\n    if (!value) return \"Filter by Region\";\n    else return value;\n  }\n\n  async function handleChange(e: SelectChangeEvent<string>) {\n    const value = e.target.value;\n    setValue(value);\n  }\n\n  return (\n    <Select\n      fullWidth\n      variant=\"filled\"\n      disableUnderline\n      IconComponent={BiChevronDown}\n      displayEmpty\n      renderValue={renderValue}\n      value={value}\n      onChange={handleChange}\n      sx={{\n        \"& svg\": {\n          right: theme.spacing(3),\n          width: \"1.2em\",\n          height: \"1.2em\",\n          top: \"calc(50% - 0.6em)\",\n          color: \"text.primary\",\n        },\n        borderRadius: 1,\n      }}\n      SelectDisplayProps={{\n        style: {\n          padding: `${theme.spacing(2)} ${theme.spacing(3)}`,\n          fontSize: \"0.875rem\",\n          background: theme.palette.primary.main,\n          borderRadius: theme.shape.borderRadius,\n          boxShadow: theme.shadows[2],\n          color: theme.palette.text.primary,\n        },\n      }}\n      MenuProps={{\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        },\n        transformOrigin: {\n          vertical: -8,\n          horizontal: \"left\",\n        },\n        variant: \"menu\",\n        MenuListProps: {\n          variant: \"menu\",\n          sx: {\n            bgcolor: \"primary.main\",\n            color: \"text.primary\",\n          },\n        },\n      }}\n    >\n      {options.map((option) => (\n        <MenuItem key={option} value={option} dense>\n          {option}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nexport default RegionDropdown;\n","import React from \"react\";\n\ntype useQuerySuccessResponse<T> = {\n  status: \"success\";\n  data: T;\n};\n\ntype useQueryErrorResponse = {\n  status: \"error\";\n};\n\nexport type useQueryResponse<T> =\n  | useQueryErrorResponse\n  | useQuerySuccessResponse<T>;\n\ntype useQueryReturn<T> = {\n  loading: boolean;\n  error: boolean;\n  data: T | undefined;\n};\n\ntype useLazyQueryReturn<T, U = undefined> = [\n  (newArgs?: U) => void,\n  useQueryReturn<T>\n];\n\nexport function useQuery<T, U extends object>(\n  callback: (args: U) => Promise<useQueryResponse<T>>,\n  args: U\n): useQueryReturn<T>;\nexport function useQuery<T>(\n  callback: () => Promise<useQueryResponse<T>>\n): useQueryReturn<T>;\nexport function useQuery<T, U>(\n  callback: (args?: U) => Promise<useQueryResponse<T>>,\n  args?: U\n): useQueryReturn<T> {\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [data, setData] = React.useState<T | undefined>(undefined);\n\n  let effectDependencies;\n  if (args) {\n    effectDependencies = [callback, ...Object.values(args)];\n  } else {\n    effectDependencies = [callback];\n  }\n\n  React.useEffect(() => {\n    async function execCallback() {\n      let response;\n      if (args) {\n        response = await callback(args);\n      } else {\n        response = await callback();\n      }\n      if (response.status === \"error\") {\n        setError(true);\n      } else {\n        setData(response.data);\n      }\n      setLoading(false);\n    }\n\n    execCallback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, effectDependencies);\n\n  return { loading, error, data };\n}\n\nexport function useLazyQuery<T, U extends object>(\n  callback: (args: U) => Promise<useQueryResponse<T>>,\n  args?: U\n): useLazyQueryReturn<T, U>;\nexport function useLazyQuery<T>(\n  callback: () => Promise<useQueryResponse<T>>\n): useLazyQueryReturn<T>;\nexport function useLazyQuery<T, U>(\n  callback: (args?: U) => Promise<useQueryResponse<T>>,\n  args?: U\n): useLazyQueryReturn<T> {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const [data, setData] = React.useState<T | undefined>(undefined);\n\n  let dependencies = [callback];\n  if (args) {\n    dependencies.push(...Object.values(args));\n  }\n\n  const exec = React.useCallback(async function (newArgs?: U) {\n    setLoading(true);\n    const response = await callback(newArgs || args);\n    if (response.status === \"error\") {\n      setError(true);\n    } else {\n      setData(response.data);\n    }\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return [exec, { loading, error, data }];\n}\n","/** @jsxImportSource @emotion/react */\nimport { Autocomplete, Paper, TextField, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { MdOutlineSearch } from \"react-icons/md\";\nimport { debounce } from \"lodash\";\nimport networkService from \"../../lib/network\";\nimport { Link } from \"react-router-dom\";\nimport { useLazyQuery, useQueryResponse } from \"../../lib/hooks\";\n\nexport interface Suggestion {\n  name: string;\n  code: string;\n}\n\nconst Searchbar: React.FC = () => {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const callback = React.useCallback(async function callback({\n    name,\n  }: {\n    name: string;\n  }): Promise<useQueryResponse<Suggestion[]>> {\n    if (!name) {\n      return { status: \"success\", data: [] };\n    }\n    const suggestions = await networkService.loadByName({ name });\n    return suggestions;\n  },\n  []);\n  const [fetchOptions, { data: options }] = useLazyQuery<\n    Suggestion[],\n    { name: string }\n  >(callback);\n  const theme = useTheme();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedFetchOptions = React.useCallback(debounce(fetchOptions, 300), [\n    fetchOptions,\n  ]);\n\n  function handleInputChange(_: any, value: string) {\n    setInputValue(value);\n    debouncedFetchOptions({ name: value.toLowerCase() });\n  }\n\n  function getOptionLabel(option: Suggestion) {\n    return option.name;\n  }\n\n  function renderOption(\n    props: React.HTMLAttributes<HTMLLIElement>,\n    option: Suggestion\n  ) {\n    return (\n      <li {...props} css={{ paddingLeft: `${theme.spacing(3)} !important` }}>\n        <Link\n          to={`/${option.code}`}\n          style={{\n            display: \"block\",\n            width: \"100%\",\n            height: \"100%\",\n            textDecoration: \"none\",\n            color: theme.palette.text.primary,\n          }}\n        >\n          {option.name}\n        </Link>\n      </li>\n    );\n  }\n\n  return (\n    <Autocomplete\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      freeSolo\n      fullWidth\n      PaperComponent={(props) => (\n        <Paper {...props} sx={{ backgroundImage: \"none\", mt: 1 }} />\n      )}\n      ListboxProps={{\n        style: {\n          fontSize: \"0.875rem\",\n        },\n      }}\n      getOptionLabel={getOptionLabel}\n      renderOption={renderOption}\n      filterOptions={(x) => x}\n      options={options || []}\n      disableClearable\n      noOptionsText=\"No Country Found\"\n      renderInput={({ InputProps, ...rest }) => (\n        <TextField\n          {...rest}\n          variant=\"filled\"\n          sx={{\n            boxShadow: 2,\n            borderRadius: 1,\n          }}\n          placeholder=\"Search for a country...\"\n          InputProps={{\n            ...InputProps,\n            color: \"secondary\",\n            disableUnderline: true,\n            startAdornment: (\n              <MdOutlineSearch\n                color={theme.palette.text.secondary}\n                size={24}\n                style={{\n                  marginRight: theme.spacing(2),\n                }}\n              />\n            ),\n            sx: {\n              fontSize: \"0.875rem\",\n              backgroundImage: \"none\",\n              py: 3 / 2,\n              px: 3,\n              paddingTop: `${theme.spacing(3 / 2)} !important`,\n              paddingLeft: `${theme.spacing(3)} !important`,\n              bgcolor: \"primary.main\",\n              borderRadius: 1,\n              \"&:hover\": {\n                bgcolor: \"background.paper\",\n              },\n              \"&.Mui-focused\": {\n                bgcolor: \"background.paper\",\n              },\n            },\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default Searchbar;\n","import { CircularProgress } from \"@mui/material\";\n\nconst LoadingIndicator: React.FC = () => {\n  return (\n    <CircularProgress\n      sx={{\n        mt: {\n          xs: 10,\n          sm: 15,\n          lg: 20,\n        },\n        color: \"text.primary\",\n        ml: \"calc(50% - 20px)\",\n        transform: \"trans\",\n      }}\n    />\n  );\n};\n\nexport default LoadingIndicator;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { Grid, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport networkService from \"../../lib/network\";\nimport CountryCard from \"../CountryCard\";\nimport Layout from \"../Layout\";\nimport { Props as CountryInfo } from \"../CountryCard\";\nimport RegionDropdown from \"../RegionDropdown\";\nimport Searchbar from \"../Searchbar\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport { useLazyQuery, useQuery } from \"../../lib/hooks\";\n\nconst MainContent: React.FC = () => {\n  const {\n    loading,\n    error,\n    data: countries,\n  } = useQuery(networkService.loadAllCountries);\n  const [region, setRegion] = React.useState<string>(\"\");\n  const [\n    searchByRegion,\n    { data: filteredCountries, error: regionError, loading: regionLoading },\n  ] = useLazyQuery<CountryInfo[], { region: string }>(\n    networkService.loadByRegion\n  );\n  const theme = useTheme();\n  const data = filteredCountries || countries;\n\n  function loadByRegion(value: string) {\n    setRegion(value);\n    document.title = `Countries | ${value}`;\n    searchByRegion({ region: value.toLowerCase() });\n  }\n\n  if (error || regionError) {\n    return <div>Something went Wrong</div>;\n  }\n\n  return (\n    <Layout>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        rowSpacing={4}\n        sx={{ mb: 4 }}\n      >\n        <Grid item xs={12} sm={6} md={5}>\n          <Searchbar />\n        </Grid>\n        <Grid item xs={7} sm={3} md={2}>\n          <RegionDropdown value={region} setValue={loadByRegion} />\n        </Grid>\n      </Grid>\n      <div\n        css={css`\n          padding-left: 16px;\n          padding-right: 16px;\n          ${theme.breakpoints.up(\"sm\")} {\n            padding-left: 0;\n            padding-right: 0;\n          }\n        `}\n      >\n        {loading || regionLoading ? (\n          <LoadingIndicator />\n        ) : (\n          <Grid\n            container\n            rowSpacing={{ xs: 6, lg: 10 }}\n            columnSpacing={{\n              xs: 3,\n              md: 4,\n              lg: 6,\n            }}\n          >\n            {data!.map((country) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={country.name}>\n                <CountryCard\n                  name={country.name}\n                  flagUrl={country.flagUrl}\n                  population={country.population}\n                  region={country.region}\n                  capital={country.capital}\n                  code={country.code}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import type { PaletteMode } from \"@mui/material\";\nimport React from \"react\";\nimport type { IThemeContext } from \"../types/lib/theme\";\n\nexport default function getTheme(mode: PaletteMode) {\n  return {\n    typography: {\n      fontFamily: \"Nunito Sans, sans-serif\",\n      fontWeightRegular: 300,\n      fontWeightMedium: 600,\n      fontWeightBold: 800,\n    },\n    palette: {\n      mode,\n      ...(mode === \"light\"\n        ? {\n            background: {\n              default: \"hsl(0, 0%, 98%)\",\n              paper: \"hsl(0, 0%, 100%)\",\n            },\n            text: {\n              primary: \"hsl(200, 15%, 8%)\",\n              secondary: \"hsl(0, 0%, 52%)\",\n            },\n            primary: {\n              main: \"hsl(0, 0%, 100%)\",\n            },\n          }\n        : {\n            background: {\n              default: \"hsl(207, 26%, 17%)\",\n              paper: \"hsl(209, 23%, 22%)\",\n            },\n            text: {\n              primary: \"hsl(0, 0%, 100%)\",\n              secondary: \"hsl(0, 0%, 100%)\",\n            },\n            primary: {\n              main: \"hsl(209, 23%, 22%)\",\n            },\n          }),\n    },\n  };\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  toggleMode: () => {},\n});\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  text: string;\n  path: string;\n  startIcon?: React.ReactNode;\n};\n\nconst LinkButton: React.FC<Props> = ({ text, path, startIcon }) => {\n  return (\n    <Link to={path} style={{ display: \"inline-block\", textDecoration: \"none\" }}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={startIcon}\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          boxShadow: 7,\n          textTransform: \"none\",\n          \"&:hover\": {\n            bgcolor: \"primary.main\",\n          },\n          px: 3,\n        }}\n      >\n        {text}\n      </Button>\n    </Link>\n  );\n};\n\nexport default LinkButton;\n","/** @jsxImportSource @emotion/react */\nimport { Grid, Typography, useTheme, Box, Skeleton } from \"@mui/material\";\nimport React from \"react\";\nimport { MdOutlineKeyboardBackspace } from \"react-icons/md\";\nimport Layout from \"../../components/Layout\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\nimport { Props as CountryCardProps } from \"../../components/CountryCard\";\nimport networkService from \"../../lib/network\";\nimport { useLazyQuery, useQuery } from \"../../lib/hooks\";\nimport { css } from \"@emotion/react\";\nimport CountryInfoRow from \"../../components/CountryInfoRow\";\nimport { CountryName } from \"../../types/lib/network\";\nimport LinkButton from \"../../components/LinkButton\";\n\nexport interface Props extends Omit<CountryCardProps, \"code\"> {\n  nativeName: string;\n  languages: string;\n  tld: string;\n  currencies: string;\n  subregion: string;\n  borders: string[];\n}\n\nconst Country: React.FC = () => {\n  const { code } = useParams();\n  const theme = useTheme();\n  const {\n    loading,\n    error,\n    data: details,\n  } = useQuery<Props, { code: string }>(networkService.loadByCode, {\n    code: code as string,\n  });\n\n  const [\n    loadBorderCountries,\n    { loading: borderLoading, error: borderError, data: borders },\n  ] = useLazyQuery<CountryName[], { codes: string[] }>(\n    networkService.loadBorderCountries\n  );\n\n  React.useEffect(() => {\n    if (details?.borders) {\n      loadBorderCountries({ codes: details.borders });\n    }\n  }, [details?.borders, loadBorderCountries]);\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <Layout>\n      <div\n        css={css`\n          padding-left: ${theme.spacing(2)};\n          padding-right: ${theme.spacing(2)};\n          padding-bottom: ${theme.spacing(2)};\n          ${theme.breakpoints.up(\"sm\")} {\n            padding-left: 0;\n            padding-right: 0;\n            padding-bottom: 0;\n          }\n        `}\n      >\n        <LinkButton\n          text=\"Back\"\n          startIcon={<MdOutlineKeyboardBackspace />}\n          path=\"/\"\n        />\n        <Grid\n          container\n          columnSpacing={{\n            sm: 4,\n            md: 10,\n            lg: 12,\n          }}\n          rowSpacing={4}\n          justifyContent=\"space-between\"\n          sx={{\n            mt: 5 / 2,\n          }}\n        >\n          {loading ? (\n            <LoadingIndicator />\n          ) : (\n            <React.Fragment>\n              <Grid item xs={12} sm={6}>\n                <img\n                  src={details!.flagUrl}\n                  alt=\"Flag of country\"\n                  css={{\n                    width: \"100%\",\n                    height: \"auto\",\n                    boxShadow: theme.shadows[4],\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                sx={{\n                  mt: {\n                    sm: 1,\n                    lg: 3,\n                  },\n                }}\n              >\n                <Grid container rowSpacing={2}>\n                  <Grid item xs={12}>\n                    <Typography\n                      fontWeight=\"bold\"\n                      color=\"textPrimary\"\n                      variant=\"h6\"\n                    >\n                      {details!.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <CountryInfoRow\n                      label=\"Native Name\"\n                      value={details!.nativeName}\n                      gutter\n                    />\n                    <CountryInfoRow\n                      label=\"Population\"\n                      value={details!.population.toLocaleString()}\n                      gutter\n                    />\n                    <CountryInfoRow\n                      label=\"Region\"\n                      value={details!.region}\n                      gutter\n                    />\n                    <CountryInfoRow\n                      label=\"Sub Region\"\n                      value={details!.subregion}\n                      gutter\n                    />\n                    <CountryInfoRow label=\"Capital\" value={details!.capital} />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    sx={{\n                      mt: {\n                        xs: 4,\n                        sm: 0,\n                      },\n                    }}\n                  >\n                    <CountryInfoRow\n                      label=\"Top Level Domain\"\n                      value={details!.tld}\n                      gutter\n                    />\n                    <CountryInfoRow\n                      label=\"Currencies\"\n                      value={details!.currencies}\n                      gutter\n                    />\n                    <CountryInfoRow\n                      label=\"Languages\"\n                      value={details!.languages}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      mt: {\n                        xs: 2,\n                        sm: 1,\n                        md: 2,\n                        lg: 5,\n                      },\n                    }}\n                  >\n                    <div\n                      css={css`\n                        ${theme.breakpoints.up(\"sm\")} {\n                          display: flex;\n                          align-items: center;\n                        }\n                      `}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"subtitle2\"\n                        noWrap\n                        sx={{\n                          flexShrink: 0,\n                          pb: {\n                            xs: 1,\n                            md: 0,\n                          },\n                        }}\n                      >\n                        Border Countries:&nbsp;\n                      </Typography>\n                      <div\n                        css={css`\n                          flex-grow: 1;\n                        `}\n                      >\n                        {borderLoading ? (\n                          <Skeleton\n                            animation=\"wave\"\n                            variant=\"text\"\n                            sx={{ width: \"100%\" }}\n                            height={30}\n                          />\n                        ) : borderError ? (\n                          <Typography\n                            variant=\"subtitle2\"\n                            color=\"textPrimary\"\n                            fontWeight=\"light\"\n                          >\n                            Couldn't load border countries\n                          </Typography>\n                        ) : (\n                          <div\n                            css={css`\n                              display: flex;\n                              flex-wrap: wrap;\n                              row-gap: ${theme.spacing(1)};\n                            `}\n                          >\n                            {borders!.map((country) => (\n                              <Box px={1 / 2}>\n                                <LinkButton\n                                  key={country.name}\n                                  text={country.name}\n                                  path={`/${country.code}`}\n                                />\n                              </Box>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          )}\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Country;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme,\n  Container,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { ThemeContext } from \"../../lib/theme\";\nimport { BsMoon, BsMoonFill } from \"react-icons/bs\";\n\nconst Appbar: React.FC = () => {\n  const themeSwitcher = React.useContext(ThemeContext);\n  const theme = useTheme();\n  const mode = theme.palette.mode;\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          backgroundImage: \"none\",\n        }}\n      >\n        <Toolbar\n          sx={{\n            py: 2,\n            px: {\n              xs: 2,\n              sm: 4,\n            },\n          }}\n        >\n          <Container\n            disableGutters\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              component=\"h2\"\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightBold\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n              }}\n            >\n              Where in the world?\n            </Typography>\n            <Typography\n              onClick={themeSwitcher.toggleMode}\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightMedium\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n                cursor: \"pointer\",\n                \"& > svg, & > span\": {\n                  display: \"inline-block\",\n                  verticalAlign: \"middle\",\n                  color: \"text.primary\",\n                },\n                \"& > span\": {\n                  ml: 1,\n                },\n              }}\n            >\n              {mode === \"light\" ? <BsMoon /> : <BsMoonFill />}\n              <span> Dark Mode </span>\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Toolbar sx={{ py: 2 }} />\n    </React.Fragment>\n  );\n};\n\nexport default Appbar;\n","/** @jsxImportSource @emotion/react */\nimport { useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { Outlet } from \"react-router\";\nimport Appbar from \"../../components/Appbar\";\n\nconst Home: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <div\n      css={{\n        background: theme.palette.background.default,\n        minHeight: \"100vh\",\n      }}\n    >\n      <Appbar />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Home;\n","import { createTheme, PaletteMode, Theme, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainContent from \"./components/MainContent\";\nimport getTheme, { ThemeContext } from \"./lib/theme\";\nimport Country from \"./routes/Country\";\nimport Home from \"./routes/Home\";\nimport { IThemeContext } from \"./types/lib/theme\";\nimport \"./app.css\";\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const themeSwitcher = React.useMemo<IThemeContext>(\n    () => ({\n      toggleMode: () =>\n        setMode((curr) => (curr === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n  const theme = React.useMemo<Theme>(() => createTheme(getTheme(mode)), [mode]);\n  return (\n    <ThemeContext.Provider value={themeSwitcher}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />}>\n              <Route index element={<MainContent />} />\n              <Route path=\":code\" element={<Country />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}