{"version":3,"sources":["lib/network.ts","components/CountryInfoRow/index.tsx","components/CountryCard/index.tsx","components/Layout/index.tsx","components/RegionDropdown/index.tsx","components/Searchbar/index.tsx","components/MainContent/index.tsx","lib/theme.ts","routes/Country/index.tsx","components/Appbar/index.tsx","routes/Home/index.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","networkService","loadAllCountries","get","response","countries","data","map","flags","name","cca3","rest","flagUrl","svg","common","code","typedError","request","console","error","status","loadByRegion","region","loadByName","CountryInfoRow","label","value","style","display","Typography","variant","sx","fontWeight","flexGrow","noWrap","CountryCard","population","capital","to","css","Card","backgroundImage","boxShadow","CardMedia","component","src","height","alt","CardContent","p","pb","mb","toLocaleString","Layout","children","Container","maxWidth","pt","px","lg","RegionDropdown","setValue","theme","useTheme","e","a","target","Select","fullWidth","disableUnderline","IconComponent","BiChevronDown","displayEmpty","renderValue","onChange","right","spacing","width","top","color","borderRadius","SelectDisplayProps","padding","fontSize","background","palette","primary","main","shape","shadows","text","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","bgcolor","option","MenuItem","dense","Searchbar","React","useState","inputValue","setInputValue","options","setOptions","fetchOptions","useCallback","debounce","suggestions","Autocomplete","onInputChange","_","toLowerCase","freeSolo","PaperComponent","props","Paper","mt","ListboxProps","getOptionLabel","renderOption","paddingLeft","textDecoration","filterOptions","x","disableClearable","noOptionsText","renderInput","InputProps","TextField","placeholder","startAdornment","secondary","size","marginRight","py","paddingTop","MainContent","loading","setLoading","setCountries","setRegion","document","title","countriesData","useEffect","loadCountries","Grid","container","justifyContent","rowSpacing","item","xs","sm","md","CircularProgress","breakpoints","up","columnSpacing","country","xl","ThemeContext","createContext","toggleMode","Country","Appbar","themeSwitcher","useContext","mode","Fragment","AppBar","position","Toolbar","disableGutters","alignItems","onClick","cursor","verticalAlign","ml","Home","default","minHeight","App","setMode","useMemo","curr","createTheme","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","paper","getTheme","Provider","ThemeProvider","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad0fac80.chunk.js","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { CountryData } from \"../types/lib/network\";\n\nconst instance = axios.create({\n  baseURL: \"https://restcountries.com/v3.1\",\n});\n\nconst networkService = {\n  async loadAllCountries() {\n    try {\n      const response = await instance.get<CountryData[]>(\n        \"/all?fields=name,population,region,capital,flags,cca3\"\n      );\n      const countries = response.data;\n      return countries.map(({ flags, name, cca3, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n        name: name.common,\n        code: cca3,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n\n  async loadByRegion(region: string) {\n    try {\n      const response = await instance.get<CountryData[]>(\n        `region/${region}?fields=name,population,region,capital,flags,cca3`\n      );\n      const countries = response.data;\n      return countries.map(({ flags, name, cca3, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n        name: name.common,\n        code: cca3,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n\n  async loadByName(name: string) {\n    try {\n      const response = await instance.get<Pick<CountryData, \"name\" | \"cca3\">[]>(\n        `name/${name}?fields=name,cca3`\n      );\n      const countries = response.data;\n      return countries.map(({ name, cca3 }) => ({\n        name: name.common,\n        code: cca3,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n};\n\nexport default networkService;\n","import { Typography } from \"@mui/material\";\n\ntype Props = {\n  /** Label for the field */\n  label: string;\n  /** Value of the field */\n  value: string;\n};\n\nconst CountryInfoRow: React.FC<Props> = ({ label, value }) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightMedium\",\n        }}\n      >\n        {label}:&nbsp;\n      </Typography>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          flexGrow: 1,\n        }}\n        noWrap\n      >\n        {value}\n      </Typography>\n    </div>\n  );\n};\nexport default CountryInfoRow;\n","/** @jsxImportSource @emotion/react */\nimport { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport CountryInfoRow from \"../CountryInfoRow\";\nimport { Link } from \"react-router-dom\";\nimport { css } from \"@emotion/react\";\n\nexport interface Props {\n  /** Url for image of country's flag */\n  flagUrl: string;\n  /** name of the country */\n  name: string;\n  /** Country's population */\n  population: number;\n  /** Region of the country */\n  region: string;\n  /** capital of the country */\n  capital: string;\n  /** code of the country */\n  code: string;\n}\n\nconst CountryCard: React.FC<Props> = ({\n  flagUrl,\n  population,\n  name,\n  region,\n  capital,\n  code,\n}) => {\n  return (\n    <Link\n      to={`/${code}`}\n      css={css`\n        display: block;\n        text-decoration: none;\n      `}\n    >\n      <Card sx={{ backgroundImage: \"none\", boxShadow: 3 }}>\n        <CardMedia\n          component=\"img\"\n          src={flagUrl}\n          height={180}\n          alt=\"flag of country\"\n        />\n        <CardContent sx={{ p: 4, \"&:last-child\": { pb: 5 } }}>\n          <Typography\n            sx={{\n              fontWeight: \"fontWeightBold\",\n              mb: 2,\n            }}\n            noWrap\n          >\n            {name}\n          </Typography>\n          <div>\n            <CountryInfoRow\n              label=\"Population\"\n              value={population.toLocaleString()}\n            />\n            <CountryInfoRow label=\"Region\" value={region} />\n            <CountryInfoRow label=\"Capital\" value={capital} />\n          </div>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n\nexport default CountryCard;\n","import { Container } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <Container\n      maxWidth=\"lg\"\n      component=\"main\"\n      sx={{\n        pt: 4,\n        px: {\n          lg: 0,\n        },\n      }}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default Layout;\n","import { MenuItem, Select, SelectChangeEvent, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { BiChevronDown } from \"react-icons/bi\";\n\ntype Props = {\n  value: string;\n  setValue: (newVaue: string) => void;\n};\n\nconst RegionDropdown: React.FC<Props> = ({ value, setValue }) => {\n  const theme = useTheme();\n  const options = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  function renderValue(value: any) {\n    if (!value) return \"Filter by Region\";\n    else return value;\n  }\n\n  async function handleChange(e: SelectChangeEvent<string>) {\n    const value = e.target.value;\n    setValue(value);\n  }\n\n  return (\n    <Select\n      fullWidth\n      variant=\"filled\"\n      disableUnderline\n      IconComponent={BiChevronDown}\n      displayEmpty\n      renderValue={renderValue}\n      value={value}\n      onChange={handleChange}\n      sx={{\n        \"& svg\": {\n          right: theme.spacing(3),\n          width: \"1.2em\",\n          height: \"1.2em\",\n          top: \"calc(50% - 0.6em)\",\n          color: \"text.primary\",\n        },\n        borderRadius: 1,\n      }}\n      SelectDisplayProps={{\n        style: {\n          padding: `${theme.spacing(2)} ${theme.spacing(3)}`,\n          fontSize: \"0.875rem\",\n          background: theme.palette.primary.main,\n          borderRadius: theme.shape.borderRadius,\n          boxShadow: theme.shadows[2],\n          color: theme.palette.text.primary,\n        },\n      }}\n      MenuProps={{\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        },\n        transformOrigin: {\n          vertical: -8,\n          horizontal: \"left\",\n        },\n        variant: \"menu\",\n        MenuListProps: {\n          variant: \"menu\",\n          sx: {\n            bgcolor: \"primary.main\",\n            color: \"text.primary\",\n          },\n        },\n      }}\n    >\n      {options.map((option) => (\n        <MenuItem key={option} value={option} dense>\n          {option}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nexport default RegionDropdown;\n","/** @jsxImportSource @emotion/react */\nimport { Autocomplete, Paper, TextField, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { MdOutlineSearch } from \"react-icons/md\";\nimport { debounce } from \"lodash\";\nimport networkService from \"../../lib/network\";\nimport { Link } from \"react-router-dom\";\n\ntype Suggestion = {\n  name: string;\n  code: string;\n};\n\nconst Searchbar: React.FC = () => {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [options, setOptions] = React.useState<Suggestion[]>([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const fetchOptions = React.useCallback(\n    debounce(async function (name: string) {\n      if (!name) {\n        return;\n      }\n      const suggestions = await networkService.loadByName(name);\n      setOptions(suggestions);\n    }, 300),\n    []\n  );\n  const theme = useTheme();\n\n  function handleInputChange(_: any, value: string) {\n    setInputValue(value);\n    fetchOptions(value.toLowerCase());\n  }\n\n  function getOptionLabel(option: Suggestion) {\n    return option.name;\n  }\n\n  function renderOption(\n    props: React.HTMLAttributes<HTMLLIElement>,\n    option: Suggestion\n  ) {\n    return (\n      <li {...props} css={{ paddingLeft: `${theme.spacing(3)} !important` }}>\n        <Link\n          to={`/${option.code}`}\n          style={{\n            display: \"block\",\n            width: \"100%\",\n            height: \"100%\",\n            textDecoration: \"none\",\n            color: theme.palette.text.primary,\n          }}\n        >\n          {option.name}\n        </Link>\n      </li>\n    );\n  }\n\n  return (\n    <Autocomplete\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      freeSolo\n      fullWidth\n      PaperComponent={(props) => (\n        <Paper {...props} sx={{ backgroundImage: \"none\", mt: 1 }} />\n      )}\n      ListboxProps={{\n        style: {\n          fontSize: \"0.875rem\",\n        },\n      }}\n      getOptionLabel={getOptionLabel}\n      renderOption={renderOption}\n      filterOptions={(x) => x}\n      options={options}\n      disableClearable\n      noOptionsText=\"No Country Found\"\n      renderInput={({ InputProps, ...rest }) => (\n        <TextField\n          {...rest}\n          variant=\"filled\"\n          sx={{\n            boxShadow: 2,\n            borderRadius: 1,\n          }}\n          placeholder=\"Search for a country...\"\n          InputProps={{\n            ...InputProps,\n            color: \"secondary\",\n            disableUnderline: true,\n            startAdornment: (\n              <MdOutlineSearch\n                color={theme.palette.text.secondary}\n                size={24}\n                style={{\n                  marginRight: theme.spacing(2),\n                }}\n              />\n            ),\n            sx: {\n              fontSize: \"0.875rem\",\n              backgroundImage: \"none\",\n              py: 3 / 2,\n              px: 3,\n              paddingTop: `${theme.spacing(3 / 2)} !important`,\n              paddingLeft: `${theme.spacing(3)} !important`,\n              bgcolor: \"primary.main\",\n              borderRadius: 1,\n              \"&:hover\": {\n                bgcolor: \"background.paper\",\n              },\n              \"&.Mui-focused\": {\n                bgcolor: \"background.paper\",\n              },\n            },\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default Searchbar;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { CircularProgress, Grid, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport networkService from \"../../lib/network\";\nimport CountryCard from \"../CountryCard\";\nimport Layout from \"../Layout\";\nimport { Props as CountryInfo } from \"../CountryCard\";\nimport RegionDropdown from \"../RegionDropdown\";\nimport Searchbar from \"../Searchbar\";\n\nconst MainContent: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [countries, setCountries] = React.useState<CountryInfo[]>([]);\n  const [region, setRegion] = React.useState<string>(\"\");\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    async function loadCountries() {\n      const countriesData = await networkService.loadAllCountries();\n      setCountries(countriesData);\n      setLoading(false);\n    }\n    loadCountries();\n  }, []);\n\n  async function loadByRegion(value: string) {\n    setRegion(value);\n    setLoading(true);\n    document.title = `Countries | ${value}`;\n    const countriesData = await networkService.loadByRegion(\n      value.toLowerCase()\n    );\n    setCountries(countriesData);\n    setLoading(false);\n  }\n\n  return (\n    <Layout>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        rowSpacing={4}\n        sx={{ mb: 4 }}\n      >\n        <Grid item xs={12} sm={6} md={5}>\n          <Searchbar />\n        </Grid>\n        <Grid item xs={7} sm={3} md={2}>\n          <RegionDropdown value={region} setValue={loadByRegion} />\n        </Grid>\n      </Grid>\n      {loading ? (\n        <CircularProgress color=\"primary\" />\n      ) : (\n        <div\n          css={css`\n            flex-grow: 1;\n            overflow-y: scroll;\n            padding-left: 16px;\n            padding-right: 16px;\n            ${theme.breakpoints.up(\"sm\")} {\n              padding-left: 0;\n              padding-right: 0;\n            } ;\n          `}\n        >\n          <Grid\n            container\n            rowSpacing={{ xs: 6, lg: 10 }}\n            columnSpacing={{\n              xs: 3,\n              md: 4,\n              lg: 6,\n            }}\n          >\n            {countries.map((country) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={country.name}>\n                <CountryCard\n                  name={country.name}\n                  flagUrl={country.flagUrl}\n                  population={country.population}\n                  region={country.region}\n                  capital={country.capital}\n                  code={country.code}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import type { PaletteMode } from \"@mui/material\";\nimport React from \"react\";\nimport type { IThemeContext } from \"../types/lib/theme\";\n\nexport default function getTheme(mode: PaletteMode) {\n  return {\n    typography: {\n      fontFamily: \"Nunito Sans, sans-serif\",\n      fontWeightRegular: 300,\n      fontWeightMedium: 600,\n      fontWeightBold: 800,\n    },\n    palette: {\n      mode,\n      ...(mode === \"light\"\n        ? {\n            background: {\n              default: \"hsl(0, 0%, 98%)\",\n              paper: \"hsl(0, 0%, 100%)\",\n            },\n            text: {\n              primary: \"hsl(200, 15%, 8%)\",\n              secondary: \"hsl(0, 0%, 52%)\",\n            },\n            primary: {\n              main: \"hsl(0, 0%, 100%)\",\n            },\n          }\n        : {\n            background: {\n              default: \"hsl(207, 26%, 17%)\",\n              paper: \"hsl(209, 23%, 22%)\",\n            },\n            text: {\n              primary: \"hsl(0, 0%, 100%)\",\n              secondary: \"hsl(0, 0%, 100%)\",\n            },\n            primary: {\n              main: \"hsl(209, 23%, 22%)\",\n            },\n          }),\n    },\n  };\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  toggleMode: () => {},\n});\n","const Country: React.FC = () => {\n  return <div>Country</div>;\n};\n\nexport default Country;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme,\n  Container,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { ThemeContext } from \"../../lib/theme\";\nimport { BsMoon, BsMoonFill } from \"react-icons/bs\";\n\nconst Appbar: React.FC = () => {\n  const themeSwitcher = React.useContext(ThemeContext);\n  const theme = useTheme();\n  const mode = theme.palette.mode;\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          backgroundImage: \"none\",\n        }}\n      >\n        <Toolbar\n          sx={{\n            py: 2,\n            px: {\n              xs: 2,\n              sm: 4,\n            },\n          }}\n        >\n          <Container\n            disableGutters\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              component=\"h2\"\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightBold\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n              }}\n            >\n              Where in the world?\n            </Typography>\n            <Typography\n              onClick={themeSwitcher.toggleMode}\n              color=\"textPrimary\"\n              sx={{\n                fontWeight: \"fontWeightMedium\",\n                fontSize: {\n                  xs: \"0.875rem\",\n                  md: \"1.125rem\",\n                  lg: \"1.25rem\",\n                },\n                cursor: \"pointer\",\n                \"& > svg, & > span\": {\n                  display: \"inline-block\",\n                  verticalAlign: \"middle\",\n                  color: \"text.primary\",\n                },\n                \"& > span\": {\n                  ml: 1,\n                },\n              }}\n            >\n              {mode === \"light\" ? <BsMoon /> : <BsMoonFill />}\n              <span> Dark Mode </span>\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Toolbar sx={{ py: 2 }} />\n    </React.Fragment>\n  );\n};\n\nexport default Appbar;\n","/** @jsxImportSource @emotion/react */\nimport { useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { Outlet } from \"react-router\";\nimport Appbar from \"../../components/Appbar\";\n\nconst Home: React.FC = () => {\n  const theme = useTheme();\n  return (\n    <div\n      css={{\n        background: theme.palette.background.default,\n        minHeight: \"100vh\",\n      }}\n    >\n      <Appbar />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Home;\n","import { createTheme, PaletteMode, Theme, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainContent from \"./components/MainContent\";\nimport getTheme, { ThemeContext } from \"./lib/theme\";\nimport Country from \"./routes/Country\";\nimport Home from \"./routes/Home\";\nimport { IThemeContext } from \"./types/lib/theme\";\nimport \"./app.css\";\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const themeSwitcher = React.useMemo<IThemeContext>(\n    () => ({\n      toggleMode: () =>\n        setMode((curr) => (curr === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n  const theme = React.useMemo<Theme>(() => createTheme(getTheme(mode)), [mode]);\n  return (\n    <ThemeContext.Provider value={themeSwitcher}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />}>\n              <Route index element={<MainContent />} />\n              <Route path=\":country\" element={<Country />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}