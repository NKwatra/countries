{"version":3,"sources":["lib/network.ts","components/CountryInfoRow/index.tsx","components/CountryCard/index.tsx","components/Layout/index.tsx","components/MainContent/index.tsx","lib/theme.ts","routes/Country/index.tsx","components/Appbar/index.tsx","routes/Home/index.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","networkService","loadAllCountries","get","response","countries","data","map","flags","rest","flagUrl","svg","typedError","request","console","error","status","CountryInfoRow","label","value","Typography","variant","sx","fontWeight","display","CountryCard","population","name","region","capital","Card","CardMedia","component","src","width","maxWidth","height","alt","CardContent","p","pb","mb","toLocaleString","Layout","children","theme","useTheme","style","margin","paddingTop","maxHeight","background","palette","default","Container","mt","flexDirection","MainContent","React","useState","loading","setLoading","setCountries","useEffect","a","countriesData","loadCountries","CircularProgress","flexGrow","overflowY","Grid","container","rowSpacing","xs","lg","columnSpacing","country","item","sm","md","xl","ThemeContext","createContext","toggleMode","Country","Appbar","themeSwitcher","useContext","mode","AppBar","position","backgroundImage","Toolbar","py","px","disableGutters","justifyContent","alignItems","color","fontSize","onClick","cursor","verticalAlign","ml","Home","Fragment","App","setMode","useMemo","curr","createTheme","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","paper","text","primary","secondary","main","getTheme","Provider","ThemeProvider","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,iCAyBIC,EAtBQ,CACfC,iBADe,WACK,OAAD,uIAEEL,EAASM,IAAmB,QAF9B,cAEfC,EAFe,OAGfC,EAAYD,EAASE,KAHN,kBAIdD,EAAUE,KAAI,gBAAGC,EAAH,EAAGA,MAAUC,EAAb,oCAAC,eACjBA,GADgB,IAEnBC,QAASF,EAAMG,UANI,wCASfC,EATe,MAULC,QAELD,EAAWR,WACpBU,QAAQC,MAAMH,EAAWR,SAASE,MAClCQ,QAAQC,MAAMH,EAAWR,SAASY,SAHlCF,QAAQC,MAAM,0BAXK,kBAgBd,IAhBc,6D,2CC0BZE,EAzByB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChD,OACE,gCACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,GAAI,CACFC,WAAY,mBACZC,QAAS,gBAJb,SAOGN,IAEF,KACD,cAACE,EAAA,EAAD,CACEC,QAAQ,YACRC,GAAI,CACFC,WAAY,kBACZC,QAAS,gBAJb,SAOGL,QC4BMM,EAzCsB,SAAC,GAM/B,IALLf,EAKI,EALJA,QACAgB,EAII,EAJJA,WACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QAEA,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,IAAKvB,EACLY,GAAI,CACFY,MAAO,OACPC,SAAU,OACVC,OAAQ,QAEVC,IAAI,oBAEN,eAACC,EAAA,EAAD,CAAahB,GAAI,CAAEiB,EAAG,EAAG,eAAgB,CAAEC,GAAI,IAA/C,UACE,cAACpB,EAAA,EAAD,CACEE,GAAI,CACFC,WAAY,iBACZkB,GAAI,GAHR,SAMGd,IAEH,gCACE,cAAC,EAAD,CACET,MAAM,aACNC,MAAOO,EAAWgB,mBAEpB,cAAC,EAAD,CAAgBxB,MAAM,SAASC,MAAOS,IACtC,cAAC,EAAD,CAAgBV,MAAM,UAAUC,MAAOU,c,iBCjBlCc,EA3BiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3BC,EAAQC,cACd,OACE,sBACEC,MAAO,CACLC,QAAS,EACTC,WAAY,GACZb,OAAQ,qBACRc,UAAW,qBACXC,WAAYN,EAAMO,QAAQD,WAAWE,SANzC,SASE,cAACC,EAAA,EAAD,CACEnB,SAAS,KACTb,GAAI,CACFiC,GAAI,EACJ/B,QAAS,OACTgC,cAAe,SACfN,UAAW,QANf,SASGN,OCkBMa,EAtCe,WAC5B,MAA8BC,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,IAAMC,SAAwB,IAAhE,mBAAOtD,EAAP,KAAkByD,EAAlB,KAWA,OATAJ,IAAMK,WAAU,WAAM,4CACpB,4BAAAC,EAAA,sEAC8B/D,EAAeC,mBAD7C,OACQ+D,EADR,OAEEH,EAAaG,GACbJ,GAAW,GAHb,4CADoB,uBAAC,WAAD,wBAMpBK,KACC,IAGD,cAAC,EAAD,UACGN,EACC,cAACO,EAAA,EAAD,IAEA,qBAAKpB,MAAO,CAAEqB,SAAU,EAAGC,UAAW,UAAtC,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,CAAEC,GAAI,EAAGC,GAAI,IAAMC,cAAe,EAA9D,SACGtE,EAAUE,KAAI,SAACqE,GAAD,OACb,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACJ,GAAI,GAAIK,GAAI,EAAGC,GAAI,EAAGL,GAAI,EAAGM,GAAI,EAA5C,SACE,cAAC,EAAD,CACErD,KAAMiD,EAAQjD,KACdjB,QAASkE,EAAQlE,QACjBgB,WAAYkD,EAAQlD,WACpBE,OAAQgD,EAAQhD,OAChBC,QAAS+C,EAAQ/C,sBCW5B,IAAMoD,EAAevB,IAAMwB,cAA6B,CAC7DC,WAAY,eC1CCC,EAJW,WACxB,OAAO,2C,0BCmFMC,EAzEU,WACvB,IAAMC,EAAgB5B,IAAM6B,WAAWN,GAEjCO,EADQ1C,cACKM,QAAQoC,KAC3B,OACE,cAACC,EAAA,EAAD,CACEC,SAAS,QACTpE,GAAI,CACFqE,gBAAiB,QAHrB,SAME,cAACC,EAAA,EAAD,CACEtE,GAAI,CACFuE,GAAI,EACJC,GAAI,CACFrB,GAAI,EACJK,GAAI,EACJC,GAAI,IANV,SAUE,eAACzB,EAAA,EAAD,CACEyC,gBAAc,EACdzE,GAAI,CACFE,QAAS,OACTwE,eAAgB,gBAChBC,WAAY,UALhB,UAQE,cAAC7E,EAAA,EAAD,CACEY,UAAU,KACVkE,MAAM,cACN5E,GAAI,CACFC,WAAY,iBACZ4E,SAAU,CACR1B,GAAI,WACJM,GAAI,WACJL,GAAI,YARV,iCAcA,eAACtD,EAAA,EAAD,CACEgF,QAASd,EAAcH,WACvBe,MAAM,cACN5E,GAAI,CACFC,WAAY,mBACZ4E,SAAU,CACR1B,GAAI,WACJM,GAAI,WACJL,GAAI,WAEN2B,OAAQ,UACR,oBAAqB,CACnB7E,QAAS,eACT8E,cAAe,SACfJ,MAAO,gBAET,WAAY,CACVK,GAAI,IAjBV,UAqBY,UAATf,EAAmB,cAAC,IAAD,IAAa,cAAC,IAAD,IACjC,0DC/DGgB,EATQ,WACrB,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,cAAC,IAAD,QC2BSC,MA1Bf,WACE,MAAwBhD,IAAMC,SAAsB,QAApD,mBAAO6B,EAAP,KAAamB,EAAb,KACMrB,EAAgB5B,IAAMkD,SAC1B,iBAAO,CACLzB,WAAY,kBACVwB,GAAQ,SAACE,GAAD,MAAoB,UAATA,EAAmB,OAAS,eAEnD,IAEIhE,EAAQa,IAAMkD,SAAe,kBAAME,YJd5B,SAAkBtB,GAC/B,MAAO,CACLuB,WAAY,CACVC,WAAY,0BACZC,kBAAmB,IACnBC,iBAAkB,IAClBC,eAAgB,KAElB/D,QAAQ,aACNoC,QACa,UAATA,EACA,CACErC,WAAY,CACVE,QAAS,kBACT+D,MAAO,oBAETC,KAAM,CACJC,QAAS,oBACTC,UAAW,mBAEbD,QAAS,CACPE,KAAM,qBAGV,CACErE,WAAY,CACVE,QAAS,qBACT+D,MAAO,sBAETC,KAAM,CACJC,QAAS,mBACTC,UAAW,oBAEbD,QAAS,CACPE,KAAM,yBIpBmCC,CAASjC,MAAQ,CAACA,IACvE,OACE,cAACP,EAAayC,SAAd,CAAuBvG,MAAOmE,EAA9B,SACE,cAACqC,EAAA,EAAD,CAAe9E,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAO+E,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,kBCtB9CE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12390321.chunk.js","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { CountryData } from \"../types/lib/network\";\n\nconst instance = axios.create({\n  baseURL: \"https://restcountries.com/v2\",\n});\n\nconst networkService = {\n  async loadAllCountries() {\n    try {\n      const response = await instance.get<CountryData[]>(\"/all\");\n      const countries = response.data;\n      return countries.map(({ flags, ...rest }) => ({\n        ...rest,\n        flagUrl: flags.svg,\n      }));\n    } catch (error) {\n      const typedError = error as AxiosError;\n      if (!typedError.request) {\n        console.error(\"No Internet connection\");\n      } else if (typedError.response) {\n        console.error(typedError.response.data);\n        console.error(typedError.response.status);\n      }\n      return [];\n    }\n  },\n};\n\nexport default networkService;\n","import { Typography } from \"@mui/material\";\n\ntype Props = {\n  /** Label for the field */\n  label: string;\n  /** Value of the field */\n  value: string;\n};\n\nconst CountryInfoRow: React.FC<Props> = ({ label, value }) => {\n  return (\n    <div>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightMedium\",\n          display: \"inline-block\",\n        }}\n      >\n        {label}\n      </Typography>\n      {\": \"}\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          display: \"inline-block\",\n        }}\n      >\n        {value}\n      </Typography>\n    </div>\n  );\n};\nexport default CountryInfoRow;\n","import { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport CountryInfoRow from \"../CountryInfoRow\";\n\nexport interface Props {\n  /** Url for image of country's flag */\n  flagUrl: string;\n  /** name of the country */\n  name: string;\n  /** Country's population */\n  population: number;\n  /** Region of the country */\n  region: string;\n  /** capital of the country */\n  capital: string;\n}\n\nconst CountryCard: React.FC<Props> = ({\n  flagUrl,\n  population,\n  name,\n  region,\n  capital,\n}) => {\n  return (\n    <Card>\n      <CardMedia\n        component=\"img\"\n        src={flagUrl}\n        sx={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"auto\",\n        }}\n        alt=\"flag of country\"\n      />\n      <CardContent sx={{ p: 4, \"&:last-child\": { pb: 5 } }}>\n        <Typography\n          sx={{\n            fontWeight: \"fontWeightBold\",\n            mb: 2,\n          }}\n        >\n          {name}\n        </Typography>\n        <div>\n          <CountryInfoRow\n            label=\"Population\"\n            value={population.toLocaleString()}\n          />\n          <CountryInfoRow label=\"Region\" value={region} />\n          <CountryInfoRow label=\"Capital\" value={capital} />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CountryCard;\n","import { Container, useTheme } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const theme = useTheme();\n  return (\n    <main\n      style={{\n        margin: -8,\n        paddingTop: 88,\n        height: \"calc(100vh - 88px)\",\n        maxHeight: \"calc(100vh - 88px)\",\n        background: theme.palette.background.default,\n      }}\n    >\n      <Container\n        maxWidth=\"lg\"\n        sx={{\n          mt: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxHeight: \"100%\",\n        }}\n      >\n        {children}\n      </Container>\n    </main>\n  );\n};\n\nexport default Layout;\n","import { CircularProgress, Grid } from \"@mui/material\";\nimport React from \"react\";\nimport networkService from \"../../lib/network\";\nimport CountryCard from \"../CountryCard\";\nimport Layout from \"../Layout\";\nimport { Props as CountryInfo } from \"../CountryCard\";\n\nconst MainContent: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [countries, setCountries] = React.useState<CountryInfo[]>([]);\n\n  React.useEffect(() => {\n    async function loadCountries() {\n      const countriesData = await networkService.loadAllCountries();\n      setCountries(countriesData);\n      setLoading(false);\n    }\n    loadCountries();\n  }, []);\n\n  return (\n    <Layout>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <div style={{ flexGrow: 1, overflowY: \"scroll\" }}>\n          <Grid container rowSpacing={{ xs: 6, lg: 10 }} columnSpacing={2}>\n            {countries.map((country) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n                <CountryCard\n                  name={country.name}\n                  flagUrl={country.flagUrl}\n                  population={country.population}\n                  region={country.region}\n                  capital={country.capital}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import type { PaletteMode } from \"@mui/material\";\nimport React from \"react\";\nimport type { IThemeContext } from \"../types/lib/theme\";\n\nexport default function getTheme(mode: PaletteMode) {\n  return {\n    typography: {\n      fontFamily: \"Nunito Sans, sans-serif\",\n      fontWeightRegular: 300,\n      fontWeightMedium: 600,\n      fontWeightBold: 800,\n    },\n    palette: {\n      mode,\n      ...(mode === \"light\"\n        ? {\n            background: {\n              default: \"hsl(0, 0%, 98%)\",\n              paper: \"hsl(0, 0%, 100%)\",\n            },\n            text: {\n              primary: \"hsl(200, 15%, 8%)\",\n              secondary: \"hsl(0, 0%, 52%)\",\n            },\n            primary: {\n              main: \"hsl(0, 0%, 100%)\",\n            },\n          }\n        : {\n            background: {\n              default: \"hsl(207, 26%, 17%)\",\n              paper: \"hsl(209, 23%, 22%)\",\n            },\n            text: {\n              primary: \"hsl(0, 0%, 100%)\",\n              secondary: \"hsl(0, 0%, 100%)\",\n            },\n            primary: {\n              main: \"hsl(209, 23%, 22%)\",\n            },\n          }),\n    },\n  };\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  toggleMode: () => {},\n});\n","const Country: React.FC = () => {\n  return <div>Country</div>;\n};\n\nexport default Country;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme,\n  Container,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { ThemeContext } from \"../../lib/theme\";\nimport { BsMoon, BsMoonFill } from \"react-icons/bs\";\n\nconst Appbar: React.FC = () => {\n  const themeSwitcher = React.useContext(ThemeContext);\n  const theme = useTheme();\n  const mode = theme.palette.mode;\n  return (\n    <AppBar\n      position=\"fixed\"\n      sx={{\n        backgroundImage: \"none\",\n      }}\n    >\n      <Toolbar\n        sx={{\n          py: 2,\n          px: {\n            xs: 2,\n            sm: 4,\n            md: 7,\n          },\n        }}\n      >\n        <Container\n          disableGutters\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            component=\"h2\"\n            color=\"textPrimary\"\n            sx={{\n              fontWeight: \"fontWeightBold\",\n              fontSize: {\n                xs: \"0.875rem\",\n                md: \"1.125rem\",\n                lg: \"1.25rem\",\n              },\n            }}\n          >\n            Where in the world?\n          </Typography>\n          <Typography\n            onClick={themeSwitcher.toggleMode}\n            color=\"textPrimary\"\n            sx={{\n              fontWeight: \"fontWeightMedium\",\n              fontSize: {\n                xs: \"0.875rem\",\n                md: \"1.125rem\",\n                lg: \"1.25rem\",\n              },\n              cursor: \"pointer\",\n              \"& > svg, & > span\": {\n                display: \"inline-block\",\n                verticalAlign: \"middle\",\n                color: \"text.primary\",\n              },\n              \"& > span\": {\n                ml: 1,\n              },\n            }}\n          >\n            {mode === \"light\" ? <BsMoon /> : <BsMoonFill />}\n            <span> Dark Mode </span>\n          </Typography>\n        </Container>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\nimport { Outlet } from \"react-router\";\nimport Appbar from \"../../components/Appbar\";\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Appbar />\n      <Outlet />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { createTheme, PaletteMode, Theme, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainContent from \"./components/MainContent\";\nimport getTheme, { ThemeContext } from \"./lib/theme\";\nimport Country from \"./routes/Country\";\nimport Home from \"./routes/Home\";\nimport { IThemeContext } from \"./types/lib/theme\";\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const themeSwitcher = React.useMemo<IThemeContext>(\n    () => ({\n      toggleMode: () =>\n        setMode((curr) => (curr === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n  const theme = React.useMemo<Theme>(() => createTheme(getTheme(mode)), [mode]);\n  return (\n    <ThemeContext.Provider value={themeSwitcher}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />}>\n              <Route index element={<MainContent />} />\n              <Route path=\":country\" element={<Country />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}