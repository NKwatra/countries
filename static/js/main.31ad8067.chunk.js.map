{"version":3,"sources":["components/CountryInfoRow/index.tsx","components/CountryCard/index.tsx","components/Layout/index.tsx","components/MainContent/index.tsx","lib/theme.ts","routes/Country/index.tsx","components/Appbar/index.tsx","routes/Home/index.tsx","App.tsx","index.tsx"],"names":["CountryInfoRow","label","value","Typography","variant","sx","fontWeight","display","CountryCard","flagUrl","population","name","region","capital","Card","CardMedia","component","src","width","maxWidth","height","alt","CardContent","p","pb","mb","toLocaleString","Layout","children","theme","useTheme","style","margin","marginTop","background","palette","default","Container","MainContent","ThemeContext","React","createContext","toggleMode","Country","Appbar","themeSwitcher","useContext","mode","AppBar","position","color","disableGutters","Toolbar","justifyContent","alignItems","py","onClick","cursor","Home","Fragment","App","useState","setMode","useMemo","curr","createTheme","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","paper","text","primary","secondary","getTheme","Provider","ThemeProvider","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31ad8067.chunk.js","sourcesContent":["import { Typography } from \"@mui/material\";\n\ntype Props = {\n  /** Label for the field */\n  label: string;\n  /** Value of the field */\n  value: string;\n};\n\nconst CountryInfoRow: React.FC<Props> = ({ label, value }) => {\n  return (\n    <div>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightMedium\",\n          display: \"inline-block\",\n        }}\n      >\n        {label}\n      </Typography>\n      {\": \"}\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: \"fontWeightLight\",\n          display: \"inline-block\",\n        }}\n      >\n        {value}\n      </Typography>\n    </div>\n  );\n};\nexport default CountryInfoRow;\n","import { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport CountryInfoRow from \"../CountryInfoRow\";\n\ntype Props = {\n  /** Url for image of country's flag */\n  flagUrl: string;\n  /** name of the country */\n  name: string;\n  /** Country's population */\n  population: number;\n  /** Region of the country */\n  region: string;\n  /** capital of the country */\n  capital: string;\n};\n\nconst CountryCard: React.FC<Props> = ({\n  flagUrl,\n  population,\n  name,\n  region,\n  capital,\n}) => {\n  return (\n    <Card>\n      <CardMedia\n        component=\"img\"\n        src={flagUrl}\n        sx={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"auto\",\n        }}\n        alt=\"flag of country\"\n      />\n      <CardContent sx={{ p: 4, \"&:last-child\": { pb: 5 } }}>\n        <Typography\n          sx={{\n            fontWeight: \"fontWeightBold\",\n            mb: 2,\n          }}\n        >\n          {name}\n        </Typography>\n        <div>\n          <CountryInfoRow\n            label=\"Population\"\n            value={population.toLocaleString()}\n          />\n          <CountryInfoRow label=\"Region\" value={region} />\n          <CountryInfoRow label=\"Capital\" value={capital} />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CountryCard;\n","import { Container, useTheme } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const theme = useTheme();\n  return (\n    <main\n      style={{\n        margin: -8,\n        marginTop: 88,\n        background: theme.palette.background.default,\n      }}\n    >\n      <Container maxWidth=\"lg\">{children}</Container>\n    </main>\n  );\n};\n\nexport default Layout;\n","import CountryCard from \"../CountryCard\";\nimport Layout from \"../Layout\";\n\nconst MainContent: React.FC = () => {\n  return (\n    <Layout>\n      <CountryCard\n        name=\"Albania\"\n        flagUrl=\"https://flagcdn.com/al.svg\"\n        population={38928341}\n        region=\"Europ\"\n        capital=\"Tirana\"\n      />\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import type { PaletteMode } from \"@mui/material\";\nimport React from \"react\";\nimport type { IThemeContext } from \"../types/lib/theme\";\n\nexport default function getTheme(mode: PaletteMode) {\n  return {\n    typography: {\n      fontFamily: \"Nunito Sans, sans-serif\",\n      fontWeightRegular: 300,\n      fontWeightMedium: 600,\n      fontWeightBold: 800,\n    },\n    palette: {\n      mode,\n      ...(mode === \"light\"\n        ? {\n            background: {\n              default: \"hsl(0, 0%, 98%)\",\n              paper: \"hsl(0, 0%, 100%)\",\n            },\n            text: {\n              primary: \"hsl(200, 15%, 8%)\",\n              secondary: \"hsl(0, 0%, 52%)\",\n            },\n          }\n        : {\n            background: {\n              default: \"hsl(209, 23%, 22%)\",\n              paper: \"hsl(207, 26%, 17%)\",\n            },\n            text: {\n              primary: \"hsl(0, 0%, 100%)\",\n              secondary: \"hsl(0, 0%, 100%)\",\n            },\n          }),\n    },\n  };\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  toggleMode: () => {},\n});\n","const Country: React.FC = () => {\n  return <div>Country</div>;\n};\n\nexport default Country;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme,\n  Container,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { ThemeContext } from \"../../lib/theme\";\nimport { BsMoon, BsMoonFill } from \"react-icons/bs\";\n\nconst Appbar: React.FC = () => {\n  const themeSwitcher = React.useContext(ThemeContext);\n  const theme = useTheme();\n  const mode = theme.palette.mode;\n  return (\n    <AppBar position=\"fixed\" color=\"inherit\">\n      <Container disableGutters>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            py: 2,\n          }}\n        >\n          <Typography\n            variant=\"subtitle2\"\n            component=\"h2\"\n            sx={{\n              fontWeight: \"fontWeightBold\",\n            }}\n          >\n            Where in the world?\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            onClick={themeSwitcher.toggleMode}\n            sx={{ cursor: \"pointer\" }}\n          >\n            {mode === \"light\" ? <BsMoon /> : <BsMoonFill />} Dark Mode\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\nimport { Outlet } from \"react-router\";\nimport Appbar from \"../../components/Appbar\";\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Appbar />\n      <Outlet />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { createTheme, PaletteMode, Theme, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainContent from \"./components/MainContent\";\nimport getTheme, { ThemeContext } from \"./lib/theme\";\nimport Country from \"./routes/Country\";\nimport Home from \"./routes/Home\";\nimport { IThemeContext } from \"./types/lib/theme\";\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const themeSwitcher = React.useMemo<IThemeContext>(\n    () => ({\n      toggleMode: () =>\n        setMode((curr) => (curr === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n  const theme = React.useMemo<Theme>(() => createTheme(getTheme(mode)), [mode]);\n  return (\n    <ThemeContext.Provider value={themeSwitcher}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />}>\n              <Route index element={<MainContent />} />\n              <Route path=\":country\" element={<Country />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}